server:
  port: 0

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

spring:
  application:
    name: app-service
#  jpa:
#    open-in-view: false
#    show-sql: true
    #    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#  datasource:
    #    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=order&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified
#    url: jdbc:postgresql://localhost:5432/tradeInsurance
#    username: mooni
#    password: admin
#    driver-class-name: org.postgresql.Driver
  #    platform: postgres
  #    schema: classpath:init-schema.sql
  #    initialization-mode: always
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  config:
    import: configserver:http://127.0.0.1:8888
  cloud:
    config:
      name: tradeinsurance
  profiles:
    active: dev
#  kafka:
#    bootstrap-servers: localhost:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      properties:
#        spring.json.trusted.packages: "*"

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    info:
      access: unrestricted
    health:
      show-details: always

logging:
  level:
    web: debug

system:
  properties:
    io.netty.dns.noNative: false
